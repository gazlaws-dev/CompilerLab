Grammar

    0 $accept: start $end

    1 start: expr NEWLINE

    2 expr: expr ADD expr
    3     | expr SUB expr
    4     | expr MUL expr
    5     | expr DIV expr
    6     | '(' expr ')'
    7     | CHAR


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6
')' (41) 6
error (256)
CHAR (258) 7
NEWLINE (259) 1
ADD (260) 2
SUB (261) 3
MUL (262) 4
DIV (263) 5


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
start (12)
    on left: 1, on right: 0
expr (13)
    on left: 2 3 4 5 6 7, on right: 1 2 3 4 5 6


State 0

    0 $accept: . start $end

    CHAR  shift, and go to state 1
    '('   shift, and go to state 2

    start  go to state 3
    expr   go to state 4


State 1

    7 expr: CHAR .

    $default  reduce using rule 7 (expr)


State 2

    6 expr: '(' . expr ')'

    CHAR  shift, and go to state 1
    '('   shift, and go to state 2

    expr  go to state 5


State 3

    0 $accept: start . $end

    $end  shift, and go to state 6


State 4

    1 start: expr . NEWLINE
    2 expr: expr . ADD expr
    3     | expr . SUB expr
    4     | expr . MUL expr
    5     | expr . DIV expr

    NEWLINE  shift, and go to state 7
    ADD      shift, and go to state 8
    SUB      shift, and go to state 9
    MUL      shift, and go to state 10
    DIV      shift, and go to state 11


State 5

    2 expr: expr . ADD expr
    3     | expr . SUB expr
    4     | expr . MUL expr
    5     | expr . DIV expr
    6     | '(' expr . ')'

    ADD  shift, and go to state 8
    SUB  shift, and go to state 9
    MUL  shift, and go to state 10
    DIV  shift, and go to state 11
    ')'  shift, and go to state 12


State 6

    0 $accept: start $end .

    $default  accept


State 7

    1 start: expr NEWLINE .

    $default  reduce using rule 1 (start)


State 8

    2 expr: expr ADD . expr

    CHAR  shift, and go to state 1
    '('   shift, and go to state 2

    expr  go to state 13


State 9

    3 expr: expr SUB . expr

    CHAR  shift, and go to state 1
    '('   shift, and go to state 2

    expr  go to state 14


State 10

    4 expr: expr MUL . expr

    CHAR  shift, and go to state 1
    '('   shift, and go to state 2

    expr  go to state 15


State 11

    5 expr: expr DIV . expr

    CHAR  shift, and go to state 1
    '('   shift, and go to state 2

    expr  go to state 16


State 12

    6 expr: '(' expr ')' .

    $default  reduce using rule 6 (expr)


State 13

    2 expr: expr . ADD expr
    2     | expr ADD expr .
    3     | expr . SUB expr
    4     | expr . MUL expr
    5     | expr . DIV expr

    MUL  shift, and go to state 10
    DIV  shift, and go to state 11

    $default  reduce using rule 2 (expr)


State 14

    2 expr: expr . ADD expr
    3     | expr . SUB expr
    3     | expr SUB expr .
    4     | expr . MUL expr
    5     | expr . DIV expr

    MUL  shift, and go to state 10
    DIV  shift, and go to state 11

    $default  reduce using rule 3 (expr)


State 15

    2 expr: expr . ADD expr
    3     | expr . SUB expr
    4     | expr . MUL expr
    4     | expr MUL expr .
    5     | expr . DIV expr

    $default  reduce using rule 4 (expr)


State 16

    2 expr: expr . ADD expr
    3     | expr . SUB expr
    4     | expr . MUL expr
    5     | expr . DIV expr
    5     | expr DIV expr .

    $default  reduce using rule 5 (expr)
